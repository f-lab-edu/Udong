version: '3.7'
services:
  spring:
    container_name: spring
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
        reservations:
          cpus: '1.0'
          memory: 1024M
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    env_file:
      - .env.prod
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/hyn
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: 1234

  postgres:
    image: postgres:15
    container_name: postgres
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
        reservations:
          cpus: '1.0'
          memory: 1024M
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: hyn
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 1234
    volumes:
      - postgres_data:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    restart: always
    depends_on:
      - prometheus
    privileged: true

  k6:
    image: grafana/k6:latest
    container_name: k6
    ports:
      - "6565:6565"
    volumes:
      - ./script.js:/script.js
    command: run /script.js
    network_mode: host
volumes:
  postgres_data:
