services:
  spring:
    container_name: spring
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1024M
        reservations:
          cpus: "1.0"
          memory: 1024M
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: ${DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DATASOURCE_PASSWORD}
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379

  postgres:
    image: postgres:15
    container_name: postgres-prod
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1024M
        reservations:
          cpus: "1.0"
          memory: 1024M
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: hyn
      POSTGRES_USER: ${DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${DATASOURCE_PASSWORD}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data

  postgres-exporter:
    container_name: postgres-exporter
    image: prometheuscommunity/postgres-exporter
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://${DATASOURCE_USERNAME}:${DATASOURCE_PASSWORD}@postgres:5432/hyn?sslmode=disable"
    depends_on:
      - postgres

  redis:
    image: redis:7
    container_name: redis-prod
    ports:
      - "6380:6379"
    volumes:
      - redis_data_prod:/data

volumes:
  postgres_data_prod:
  redis_data_prod: